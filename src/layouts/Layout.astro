---
interface Props {
  title: string;
  description: string;
  className?: string;
  cover?: string | null;
}

import Container from "../components/Container.astro";
import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";
import "../global.css";
import { getLangFromUrl, getLocaleFromLang } from "../i18n/utils";

const { title, description, cover, className } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const locale = getLocaleFromLang(lang);

const alternateLinks = [
  { hreflang: "en", href: `${Astro.site}/en/` },
  { hreflang: "es", href: `${Astro.site}/es/` },
  { hreflang: "pt", href: `${Astro.site}/pt/` },
  { hreflang: "x-default", href: `${Astro.site}/` },
];
---

<html lang={lang}>
  <head>
    <meta charset="utf-8" />
    <meta name="author" content="Andres Parra" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <link rel="icon" href="/favicon.ico" />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" href="/favicon-32x32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="/favicon-16x16.png" sizes="16x16" />
    <link rel="manifest" href="/site.webmanifest" />

    <meta property="og:locale" content={locale} />
    <meta property="og:site_name" content="rpcide" />
    <meta property="og:title" content={`${title} - RPCIDE`} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={cover || "/avatar.png"} />
    <meta property="og:url" content={Astro.site} />
    <meta property="og:type" content="website" />
    <meta property="og:site_name" content="rpcide" />
    <meta
      property="article:publisher"
      content="https://www.facebook.com/rpcide"
    />
    <meta property="article:section" content="Articles" />

    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={`${title} - RPCIDE`} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:site" content="@rpcide" />
    <meta name="twitter:creator" content="@rpcide" />
    <meta name="twitter:image" content={cover || "/avatar.png"} />
    <meta name="twitter:image:alt" content={title} />
    <meta name="twitter:url" content={Astro.site} />

    <title>{title} - RPCIDE</title>
    <meta name="description" content={description} />

    <link rel="sitemap" href="/sitemap.xml" />

    {
      alternateLinks.map((link) => (
        <link rel="alternate" href={link.href} hreflang={link.hreflang} />
      ))
    }

    <script is:inline>
      const getThemePreference = () => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        return window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "light";
      };
      const isDark = getThemePreference() === "dark";
      document.documentElement.classList[isDark ? "add" : "remove"]("dark");

      if (typeof localStorage !== "undefined") {
        const observer = new MutationObserver(() => {
          const isDark = document.documentElement.classList.contains("dark");
          localStorage.setItem("theme", isDark ? "dark" : "light");
        });
        observer.observe(document.documentElement, {
          attributes: true,
          attributeFilter: ["class"],
        });
      }
    </script>
  </head>

  <body>
    <Header />
    <Container className={`mb-20 ${className}`}>
      <slot />
    </Container>
    <Footer />
  </body>
</html>
